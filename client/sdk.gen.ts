// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { AddMemberMembersFamilyIdAddMemberIdPostData, AddMemberMembersFamilyIdAddMemberIdPostErrors, AddMemberMembersFamilyIdAddMemberIdPostResponses, CreateFamilyFamilyPostData, CreateFamilyFamilyPostErrors, CreateFamilyFamilyPostResponses, CreateMemberMembersRegisterPostData, CreateMemberMembersRegisterPostErrors, CreateMemberMembersRegisterPostResponses, CreateMerchantMerchantsCreatePostData, CreateMerchantMerchantsCreatePostErrors, CreateMerchantMerchantsCreatePostResponses, CreateTransactionTransactionsFamilyIdCreatePostData, CreateTransactionTransactionsFamilyIdCreatePostErrors, CreateTransactionTransactionsFamilyIdCreatePostResponses, GetAllBorrowersTransactionsMembersMemberIdGetAllBorrowersGetData, GetAllBorrowersTransactionsMembersMemberIdGetAllBorrowersGetErrors, GetAllBorrowersTransactionsMembersMemberIdGetAllBorrowersGetResponses, GetBakraMembersThegoatBakraGetData, GetBakraMembersThegoatBakraGetResponses, GetBorrowerTransactionsMembersMemberIdBorrowerTransactionsGetData, GetBorrowerTransactionsMembersMemberIdBorrowerTransactionsGetErrors, GetBorrowerTransactionsMembersMemberIdBorrowerTransactionsGetResponses, GetFamilyFamilyFamilyIdGetData, GetFamilyFamilyFamilyIdGetErrors, GetFamilyFamilyFamilyIdGetResponses, GetFamilyMembersFamilyGetMembersFamilyIdGetData, GetFamilyMembersFamilyGetMembersFamilyIdGetErrors, GetFamilyMembersFamilyGetMembersFamilyIdGetResponses, GetMemberMembersMemberIdGetData, GetMemberMembersMemberIdGetErrors, GetMemberMembersMemberIdGetResponses, GetMemberTransactionsMembersMemberIdTransactionsGetData, GetMemberTransactionsMembersMemberIdTransactionsGetErrors, GetMemberTransactionsMembersMemberIdTransactionsGetResponses, GetMerchantsMerchantsGetData, GetMerchantsMerchantsGetErrors, GetMerchantsMerchantsGetResponses, GetMoneyRequestsMembersMemberIdMoneyRequestsGetData, GetMoneyRequestsMembersMemberIdMoneyRequestsGetErrors, GetMoneyRequestsMembersMemberIdMoneyRequestsGetResponses, PayMerchantMerchantsPayPostData, PayMerchantMerchantsPayPostErrors, PayMerchantMerchantsPayPostResponses, RequestMoneyMembersFromIdRequestMoneyPostData, RequestMoneyMembersFromIdRequestMoneyPostErrors, RequestMoneyMembersFromIdRequestMoneyPostResponses, RespondToRequestMembersRespondRequestRequestIdPostData, RespondToRequestMembersRespondRequestRequestIdPostErrors, RespondToRequestMembersRespondRequestRequestIdPostResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Create Family
 */
export const createFamilyFamilyPost = <ThrowOnError extends boolean = false>(options: Options<CreateFamilyFamilyPostData, ThrowOnError>) => {
    return (options.client ?? client).post<CreateFamilyFamilyPostResponses, CreateFamilyFamilyPostErrors, ThrowOnError>({
        url: '/family/',
        ...options
    });
};

/**
 * Get Family
 */
export const getFamilyFamilyFamilyIdGet = <ThrowOnError extends boolean = false>(options: Options<GetFamilyFamilyFamilyIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetFamilyFamilyFamilyIdGetResponses, GetFamilyFamilyFamilyIdGetErrors, ThrowOnError>({
        url: '/family/{family_id}',
        ...options
    });
};

/**
 * Get Family Members
 */
export const getFamilyMembersFamilyGetMembersFamilyIdGet = <ThrowOnError extends boolean = false>(options: Options<GetFamilyMembersFamilyGetMembersFamilyIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetFamilyMembersFamilyGetMembersFamilyIdGetResponses, GetFamilyMembersFamilyGetMembersFamilyIdGetErrors, ThrowOnError>({
        url: '/family/get_members/{family_id}',
        ...options
    });
};

/**
 * Create Member
 */
export const createMemberMembersRegisterPost = <ThrowOnError extends boolean = false>(options: Options<CreateMemberMembersRegisterPostData, ThrowOnError>) => {
    return (options.client ?? client).post<CreateMemberMembersRegisterPostResponses, CreateMemberMembersRegisterPostErrors, ThrowOnError>({
        url: '/members/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Member
 */
export const getMemberMembersMemberIdGet = <ThrowOnError extends boolean = false>(options: Options<GetMemberMembersMemberIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetMemberMembersMemberIdGetResponses, GetMemberMembersMemberIdGetErrors, ThrowOnError>({
        url: '/members/{member_id}',
        ...options
    });
};

/**
 * Add Member
 */
export const addMemberMembersFamilyIdAddMemberIdPost = <ThrowOnError extends boolean = false>(options: Options<AddMemberMembersFamilyIdAddMemberIdPostData, ThrowOnError>) => {
    return (options.client ?? client).post<AddMemberMembersFamilyIdAddMemberIdPostResponses, AddMemberMembersFamilyIdAddMemberIdPostErrors, ThrowOnError>({
        url: '/members/{family_id}/add/{member_id}',
        ...options
    });
};

/**
 * Get Member Transactions
 */
export const getMemberTransactionsMembersMemberIdTransactionsGet = <ThrowOnError extends boolean = false>(options: Options<GetMemberTransactionsMembersMemberIdTransactionsGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetMemberTransactionsMembersMemberIdTransactionsGetResponses, GetMemberTransactionsMembersMemberIdTransactionsGetErrors, ThrowOnError>({
        url: '/members/{member_id}/transactions',
        ...options
    });
};

/**
 * Get Borrower Transactions
 */
export const getBorrowerTransactionsMembersMemberIdBorrowerTransactionsGet = <ThrowOnError extends boolean = false>(options: Options<GetBorrowerTransactionsMembersMemberIdBorrowerTransactionsGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetBorrowerTransactionsMembersMemberIdBorrowerTransactionsGetResponses, GetBorrowerTransactionsMembersMemberIdBorrowerTransactionsGetErrors, ThrowOnError>({
        url: '/members/{member_id}/borrower_transactions',
        ...options
    });
};

/**
 * Get Bakra
 */
export const getBakraMembersThegoatBakraGet = <ThrowOnError extends boolean = false>(options?: Options<GetBakraMembersThegoatBakraGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetBakraMembersThegoatBakraGetResponses, unknown, ThrowOnError>({
        url: '/members/thegoat/bakra',
        ...options
    });
};

/**
 * Get All Borrowers Transactions
 */
export const getAllBorrowersTransactionsMembersMemberIdGetAllBorrowersGet = <ThrowOnError extends boolean = false>(options: Options<GetAllBorrowersTransactionsMembersMemberIdGetAllBorrowersGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetAllBorrowersTransactionsMembersMemberIdGetAllBorrowersGetResponses, GetAllBorrowersTransactionsMembersMemberIdGetAllBorrowersGetErrors, ThrowOnError>({
        url: '/members/{member.id}/get_all_borrowers',
        ...options
    });
};

/**
 * Get Money Requests
 */
export const getMoneyRequestsMembersMemberIdMoneyRequestsGet = <ThrowOnError extends boolean = false>(options: Options<GetMoneyRequestsMembersMemberIdMoneyRequestsGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetMoneyRequestsMembersMemberIdMoneyRequestsGetResponses, GetMoneyRequestsMembersMemberIdMoneyRequestsGetErrors, ThrowOnError>({
        url: '/members/{member_id}/money_requests',
        ...options
    });
};

/**
 * Request Money
 */
export const requestMoneyMembersFromIdRequestMoneyPost = <ThrowOnError extends boolean = false>(options: Options<RequestMoneyMembersFromIdRequestMoneyPostData, ThrowOnError>) => {
    return (options.client ?? client).post<RequestMoneyMembersFromIdRequestMoneyPostResponses, RequestMoneyMembersFromIdRequestMoneyPostErrors, ThrowOnError>({
        url: '/members/{from_id}/request_money',
        ...options
    });
};

/**
 * Respond To Request
 */
export const respondToRequestMembersRespondRequestRequestIdPost = <ThrowOnError extends boolean = false>(options: Options<RespondToRequestMembersRespondRequestRequestIdPostData, ThrowOnError>) => {
    return (options.client ?? client).post<RespondToRequestMembersRespondRequestRequestIdPostResponses, RespondToRequestMembersRespondRequestRequestIdPostErrors, ThrowOnError>({
        url: '/members/respond_request/{request_id}',
        ...options
    });
};

/**
 * Create Transaction
 */
export const createTransactionTransactionsFamilyIdCreatePost = <ThrowOnError extends boolean = false>(options: Options<CreateTransactionTransactionsFamilyIdCreatePostData, ThrowOnError>) => {
    return (options.client ?? client).post<CreateTransactionTransactionsFamilyIdCreatePostResponses, CreateTransactionTransactionsFamilyIdCreatePostErrors, ThrowOnError>({
        url: '/transactions/{family_id}/create',
        ...options
    });
};

/**
 * Get Merchants
 *
 * Fetch a few merchants from Nessie (e.g., Target, Walmart).
 */
export const getMerchantsMerchantsGet = <ThrowOnError extends boolean = false>(options?: Options<GetMerchantsMerchantsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetMerchantsMerchantsGetResponses, GetMerchantsMerchantsGetErrors, ThrowOnError>({
        url: '/merchants/',
        ...options
    });
};

/**
 * Create Merchant
 *
 * Create a new merchant both in Nessie and in the local database.
 */
export const createMerchantMerchantsCreatePost = <ThrowOnError extends boolean = false>(options: Options<CreateMerchantMerchantsCreatePostData, ThrowOnError>) => {
    return (options.client ?? client).post<CreateMerchantMerchantsCreatePostResponses, CreateMerchantMerchantsCreatePostErrors, ThrowOnError>({
        url: '/merchants/create',
        ...options
    });
};

/**
 * Pay Merchant
 *
 * Allow a user to pay a merchant using their Nessie account.
 */
export const payMerchantMerchantsPayPost = <ThrowOnError extends boolean = false>(options: Options<PayMerchantMerchantsPayPostData, ThrowOnError>) => {
    return (options.client ?? client).post<PayMerchantMerchantsPayPostResponses, PayMerchantMerchantsPayPostErrors, ThrowOnError>({
        url: '/merchants/pay',
        ...options
    });
};
